name: Docker Image CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [
            "file-store",
            "image-processor",
            "subscription-handler",
            "gateway",
            "frontend",
          ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        if: matrix.service != 'frontend'
        run: |
          build_path="./backend/${{ matrix.service }}"
          dockerfile_path="./backend/${{ matrix.service }}/Dockerfile"

          docker buildx build "$build_path" \
            --file "$dockerfile_path" \
            --progress plain \
            --push \
            -t ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}_cicdhf:latest \
            --cache-from type=gha \
            --cache-to type=gha,mode=max

      - name: Build frontend
        if: matrix.service == 'frontend'
        run: docker buildx build ./frontend --file ./frontend/Dockerfile -o ./frontend/dist --progress plain --cache-from type=gha --cache-to type=gha,mode=max

      - name: Copy frontend into webpage-host (frontend only)
        if: matrix.service == 'frontend'
        run: |
          mkdir -p ./backend/webpage-host/public
          tar -xzf ./frontend/dist/dist.tar.gz -C ./backend/webpage-host/public

  deploy:
    runs-on: ubuntu-latest
    needs: build # This job will run after the 'build' job completes
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build webpage-host image
        run: |
          docker buildx build ./backend/webpage-host \
            --file ./backend/webpage-host/Dockerfile \
            --progress plain \
            --push \
            -t ghcr.io/${{ github.repository_owner }}/webpage-host_cicdhf:latest \
            --cache-from type=gha \
            --cache-to type=gha,mode=max

      - name: Copy init files over SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "server"
          target: .

      - name: Deploy to remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd server
            chmod +x install-docker.sh
            ./install-docker.sh
            mkdir images
            mkdir subscriptions
            mkdir vapid_secret
            echo "${{ secrets.VAPID }}" > ./vapid_secret/VAPID.json
            docker compose pull
            docker compose up -d
